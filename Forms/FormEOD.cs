/// Authors: Edmond Chen, Chris Wu
/// 
/// Build a sql database app tutorial by Shad Sluiter: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=1
/// How to write a sql query by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=2
/// Create a Winforms database app tutorial by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=3
/// How to create a DAO for mySQL - Data Access Object by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=4
/// Search query on sql example by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=5
/// Add a picture to winforms app by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=6
/// SQL insert example by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=7
/// Add a foreign key with mySQL workbench by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=8
/// How to join sql tables by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=9
/// Write a SQL inner join statement by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=10
/// Design a sql database by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=11
/// SQL select with multiple tables by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=12
/// SQL delete example by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=13
/// SQL database design features by Shad Sluiter source: https://www.youtube.com/watch?v=9CM4NAH7gTg&list=PLhPyEFL5u-i3Tyw0GtekMrHCukldmtf7k&index=14

using Google.Protobuf.WellKnownTypes;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Valenwu.DAO;

namespace Valenwu
{
    /// <summary>
    /// The FormEOD form handles end-of-day (EOD) operations for appointments, displaying appointments for the current day and calculating the total revenue generated by appointments on that day. It includes methods to initialize the form with appointment data and update the total revenue.
    /// </summary>
    public partial class FormEOD : Form
    {
        //  initializes a BindingSource, an AppointmentDAO instance, and a DateTime variable to today's date
        BindingSource eodBinding = new BindingSource();
        AppointmentDAO appointmentDAO = new AppointmentDAO();
        DateTime today = DateTime.Today;

        /// <summary>
        /// The FormEOD constructor that takes a totRevenue parameter. It initializes the form components and sets the data source for the formEOD_datagridview. It also formats and displays the total revenue on the form.
        /// </summary>
        /// <param name="totRevenue"></param>
        public FormEOD(double totRevenue)
            {
                InitializeComponent();

               // Get appointments for EOD report and bind the data to the datagridview
                eodBinding.DataSource = appointmentDAO.getAppointmentsForEOD(today.Month, today.Day, today.Year);
                formEOD_datagridview.DataSource = eodBinding;

               // Nicely formats and displays the total revenue earned for the day
                double formattedRevenue = Math.Truncate(totRevenue * 100) / 100;
                formEOD_total_revenue.Text = "$ " + formattedRevenue;
            }

        /// <summary>
        /// updateTotalRevenue returns the total revenue earned for the day by getting all appointments for the current day, iterating over them, and adding up their TOTAL_PAID values.
        /// </summary>
        /// <returns></returns>
        public double updateTotalRevenue()
        {
            // Create a list of JObject and get all appointments for the current day from the database
            List<JObject> allAppointments = appointmentDAO.getAppointmentsForEOD(today.Month, today.Day, today.Year);

            // Set totalAmount to 0 initially
            double totalAmount = 0;

            // Loop through all appointments in the allAppointments list and add their total paid amounts to the totalAmount variable
            for (int i = 0; i < allAppointments.Count(); i++)
            {
                totalAmount += (float)Convert.ToDouble(allAppointments[i]["TOTAL_PAID"].ToString());
            }

            // Return the totalAmount
            return totalAmount;
        }
    }
}
